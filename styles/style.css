/* fonts go here */
@import url('https://fonts.googleapis.com/css2?family=Rubik+Mono+One&display=swap');


/*------------------*/
/* ---- general ----*/
/*------------------*/


*, *::after, *::before {
    box-sizing: border-box;  
  }
  
  button, summary {
      cursor: pointer;
  }

  
  :root {
    /* colors */
      --color-background:#eee;
      --color-text-white: #ffffff;

    /* others */
      --angle: 0deg;
  }



/*---------------*/
/* ---- code ----*/
/*---------------*/

h1 {
    padding: 0;
    margin: 0;
}


body {
    width: 100vw;
    height: 100vh;
    background: linear-gradient(135deg, #194886 0%, #33184d 50%);
    display: flex;
    justify-content: center;
    align-items: flex-end; 
}

/* the deck text */
main > div:nth-of-type(1) > div:nth-of-type(1) {
    display: flex;
    font-family: "Rubik Mono One", monospace;
    align-items: center;
    padding-left: 1em;
}


/* controller container */
main > div:nth-of-type(1) {
    display: grid;
    grid-template-columns: repeat(8, 1fr);
    grid-template-rows: 0.5fr 2fr 2fr; 

    /* container: deck / inline-size; */
    row-gap: 1em;
   
    padding: 0;
    background-color:rgb(30, 30, 30);
    background-image: linear-gradient(135deg, rgba(221,221,221,1) 15%, rgba(30,30,30,1) 15%);;

    min-width: 17.5em;
    max-width: 35em;
    resize: horizontal;
    overflow: hidden;
    height: 20em;
}



/* @container deck (max-width: 500px) {
    main > div:nth-of-type(1) {
        grid-template-columns: repeat(4, 1fr);
        grid-template-rows: 1fr;
    }
} */
  

/* 1: equalizer with animation */
main > div:nth-of-type(1) > div:nth-of-type(2) {
    grid-column: 2/9;
    background-color: #000;
    height: 2.5rem;
    border-radius: 0.5rem;

    margin: 1rem;
    z-index: 100;
}

main > div:nth-of-type(1) > div:nth-of-type(2) {
    display: flex;
}

main > div:nth-of-type(1) > div:nth-of-type(2) > li {
    align-self: flex-end;
    list-style-type: none;
    padding: 0;
    margin: 0 0.25em 0 0.25em;

    height: 0.5em;
    width: 50%;
    background-color: grey;

    /* animation: equalizer 3s infinite ease; */
    animation-delay:var(--delay, 0s);
}

li:nth-of-type(1) {
    --delay: 0.7s;
}

li:nth-of-type(2) {
    --delay: 0.2s;
}
li:nth-of-type(3) {
    --delay: 1.3s;
}

li:nth-of-type(4) {
    --delay: 0.5s;
}

li:nth-of-type(6) {
    --delay: 1.5s;
}

li:nth-of-type(8) {
    --delay: 0.2s;
}


@keyframes equalizer {
    0% {
        height: 0.3em;
    }
    20% {
        height: 1.2em;
    }
    40% {
        height: 0.9em;
    }
    60% {
        height: 0.4em;
    }
    80% {
        height: 1.8em;
    }
    100% {
        height: 1em;
    }
    50% {
        height: 0.5em;
    }
    10% {
        height: 0em;
    }
}


/* ------------------*/
/* jog wheel 1 and 2 */
/* ------------------*/


main > div:nth-of-type(1) > div:nth-of-type(3) {
    grid-row: 2/4;
    grid-column: 2/4;
    border-radius: 50%;
    width: 8.5em;
    height: 8.5em;
    background-color: #363636;
    background: conic-gradient(from 36deg, grey, white,grey);
    box-shadow: inset black 0 0 0 1px, inset rgba(255, 255, 255, 0.3) 0 0 0 0.3em;
}

main > div:nth-of-type(1) > div:nth-of-type(3) > div,
main > div:nth-of-type(1) > div:nth-of-type(6) > div {
    position: relative;
    left: 2.25em;
    bottom: -2.25em;
    background: repeating-linear-gradient(-45deg, #ff3543, #ff3543 0.1em, #ff4e5b 0.1em, #ff4e5b 0.2em);
    width: 4em;
    height: 4em;
    border-radius: 50%;

}

main > div:nth-of-type(1) > div:nth-of-type(3):hover,
main > div:nth-of-type(1) > div:nth-of-type(6):hover {
    animation: wheel-spin 3s linear infinite;
}

main > div:nth-of-type(1) > div:nth-of-type(6) { 
    grid-row: 2/4;
    grid-column: 6/8;
    border-radius: 50%;
    width: 8.5em;
    height: 8.5em;
    background-color: #363636;
    background: conic-gradient(from 36deg, grey, white,grey);
    box-shadow: inset black 0 0 0 1px, inset rgba(255, 255, 255, 0.3) 0 0 0 0.3em;
}

@keyframes wheel-spin {
    from {
        transform:rotate(0deg);
    }
    to {
        transform:rotate(360deg);
    }
}


main > div:nth-of-type(1) > div:nth-of-type(4), main > div:nth-of-type(1) > div:nth-of-type(7) {
    position: relative;
    top: 0.5rem;
    display: flex;
    justify-content: center;
    grid-row: 4/5;
    grid-column: 2/4;
}

/* ------------ */
/* deck block 1 */
/* ------------ */

main > div:nth-of-type(1) > div:nth-of-type(4) {
    grid-row: 3/4;
    grid-column: 2/4;
}

@property --hue {
    syntax: "<number>";
    inherits: true;
    initial-value: 0;
}

/* selecteer de knoppen */

main > div:nth-of-type(1) > div:nth-of-type(4) input[type="checkbox"]:nth-of-type(1) { --index:0; }
main > div:nth-of-type(1) > div:nth-of-type(4) input[type="checkbox"]:nth-of-type(2) { --index:1; }
main > div:nth-of-type(1) > div:nth-of-type(4) input[type="checkbox"]:nth-of-type(3) { --index:2; }
main > div:nth-of-type(1) > div:nth-of-type(4) input[type="checkbox"]:nth-of-type(4) { --index:3; }


main > div:nth-of-type(1) > div:nth-of-type(4) input[type="checkbox"] {
    width: 2rem;
    height: 2rem;
    margin: 0.4rem;
    border-radius: 0.1rem;
    appearance: none;
    outline: none;

    background:conic-gradient(
		from -45deg,
		hsl(var(--hue, 0) 100% 50%),
		hsl(var(--hue, 0) 100% 50%)
	);
}

@keyframes deck-colors {
	0% {
		--hue:calc(0 + 360 / 4 * var(--index));
	}
	100% {
		--hue:calc(360 + 360 / 4 * var(--index));
	}
}

main > div:nth-of-type(1) > div:nth-of-type(4) input[type="checkbox"]:checked {
    box-shadow: 0 0 0em 0.2em white;
}


/* ------------ */
/* deck block 2 */
/* ------------ */

main > div:nth-of-type(1) > div:nth-of-type(7) {
    grid-row: 3/4;
    grid-column: 6/8;
}

main > div:nth-of-type(1) > div:nth-of-type(7) input[type="checkbox"] {
    width: 4rem;
    height: 2rem;
    margin: 0.4rem;
    border-radius: 0.1rem;
    appearance: none;
    outline: none;

    background:conic-gradient(
		from -45deg,
		hsl(var(--hue, 0) 100% 50%),
		hsl(var(--hue, 0) 100% 50%)
	);
}


/* --------------------- */
/* block with off and on */
/* --------------------- */

main > div:nth-of-type(1) > div:nth-of-type(5) {
    position: relative;
    grid-row: 2/3;
    grid-column: 4/6;
    background-color: #000;
    height: 8.5rem;
    width: 60%;
    left: 1.7em;
    border-radius: 0.2em;
}

main > div:nth-of-type(1) > div:nth-of-type(5) input[type="checkbox"] {
    position: relative;
    left: 1.3rem;
    width: 2rem;
    height: 2rem;
    margin: 0.4rem;
    border-radius: 0.1rem;
    appearance: none;
    outline: none;
    background: green;
}



/* ------------ */
/* stage lights */
/* ------------ */


main > div:nth-of-type(2), 
main > div:nth-of-type(3),
main > div:nth-of-type(4),
main > div:nth-of-type(5) {
    position: absolute;
    top: -3rem;
    width: 15rem;
    height: 40rem;
    z-index: 100;

    /* sanne hulp met code */
    height: 80vh;
	aspect-ratio:1/7;
	border-radius:50% / 0 0 2.5vh 2.5vh;
	
	background-image:conic-gradient(at center top,#ccf9 150deg,#ccf6,#ccf9 210deg);
	mask:linear-gradient(red,transparent);
	
	clip-path:polygon(50% 0, 102% 100%, -2% 100%, 50% 0);
	transform-origin:top;
	animation: stage-lights 2s infinite alternate ease-in-out;
    visibility: hidden;
}

/* stage light 1 */
main > div:nth-of-type(2) {
    left: 5%;
    animation-duration: 4s;
}

main > div:nth-of-type(3) {
    left: 25%;
    animation-duration: 3s;
}

main > div:nth-of-type(4) {
    left: 50%;
    animation-duration: 6s;
}

main > div:nth-of-type(5) {
    left: 75%;
    animation-duration: 2s;
}

/* stage light 1 */
html:has([name="stage1"]:checked) main div:nth-of-type(2),
html:has([name="stage2"]:checked) main div:nth-of-type(3),
html:has([name="stage3"]:checked) main div:nth-of-type(4),
html:has([name="stage4"]:checked) main div:nth-of-type(5) {
    visibility: visible;
}


@keyframes stage-lights {
    0% {
        transform: rotate(0deg); 
    }
    
    25% {
        transform: rotate(35deg); 
    }

    50% {
        transform: rotate(0deg); 
    }

    75% {
        transform: rotate(-35deg); 
    }
    100% {
        transform: rotate(0deg); 
    }
  }



  html:has([name="deck-button"]:checked) li {
    /* background-image:
		linear-gradient(blue 0 35%); */
        background-color: aqua;
        animation: equalizer 3s infinite ease, deck-colors 5s linear infinite;
}

html:has([name="deck-button"]:checked) 
    main > div:nth-of-type(1) > div:nth-of-type(4) input[type="checkbox"] {
        animation: deck-colors 5s linear infinite;
}
